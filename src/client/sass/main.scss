@import "codemirror";

* {
    box-sizing: border-box;
}

html, body {
    padding: 0;
    margin: 0;

    font-family: monospace;
    color: white;

    width: 100%;
    height: 100%;
    overflow: hidden;
}

body {
    background-color: black;
}

@mixin unselectable() {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@mixin disableInterpolation() {
    image-rendering: optimizeSpeed;             /* Older versions of FF          */
    image-rendering: -moz-crisp-edges;          /* FF 6.0+                       */
    image-rendering: -webkit-optimize-contrast; /* Safari                        */
    image-rendering: -o-crisp-edges;            /* OS X & Windows Opera (12.02+) */
    image-rendering: pixelated;                 /* Awesome future-browsers       */
    -ms-interpolation-mode: nearest-neighbor;
}

$frameSize: 240px;
$innerFrameSize: $frameSize - 6px;
$sideFragmentSize: $innerFrameSize / 4;
$portSize: 40px;

$topBarHeight: 50px;

.CodeMirror pre {
    font-size: 12px;
}

.appContainer {
    width: 100%;
    height: 100%;
    
    // Stacking context
    position: relative; 
    z-index: 0;

    // .modalContainer

    .topBar {
        z-index: 5;

        width: 100%;
        height: $topBarHeight;
        border-bottom: 1px solid #333333;

        $buttonHeight: $topBarHeight - 1px;
        $buttonLineHeight: $topBarHeight - 6px;

        .heading {
            height: $buttonHeight;
            line-height: $buttonHeight;

            display: inline-block;
            vertical-align: top;

            padding: 0 10px;
            margin-right: 20px;
            font-size: 1.5em;
        }

        a {
            height: $buttonHeight;
            line-height: $buttonLineHeight;

            display: inline-block;
            vertical-align: top;

            border: 3px double white;
            padding: 0 15px;
            margin: 0 5px;;

            color: white;
        }
    }

    .tableContainer {
        z-index: -10;

        height: 100%;
        width: 100%;
        position: absolute;
        top: 0;
        left: 0;
        padding-top: $topBarHeight;

        .nodeTable {
            width: 100%;
            height: 100%;
            overflow: scroll;

            .nodeHorizPortRow {
                height: $portSize;
                white-space: nowrap;

                // .nodePort

                .nodeCorner {
                    vertical-align: top;
                    width: $portSize;
                    height: $portSize;

                    display: inline-block;
                }
            }
            .nodeRow {
                height: $frameSize;
                white-space: nowrap;

                // .nodePort

                .nodeCol {
                    vertical-align: top;
                    width: $frameSize;
                    height: $frameSize;

                    display: inline-block;

                    border: 1px solid #111;

                    // .nodeFrame
                }
            }
        }
    }
}

.nodePort {
    vertical-align: top;
    display: inline-block;

    &.nodeHorizPort {
        width: $frameSize;
        height: $portSize;

        .addButton {
            width: $frameSize;
            height: $portSize;
            line-height: $portSize;
        }
        .portDisplay {
            flex-direction: row;
        }
    }
    &.nodeVertPort {
        width: $portSize;
        height: $frameSize;

        .addButton {
            width: $portSize;
            height: $frameSize;
            line-height: $frameSize;
        }
        .portDisplay {
            flex-direction: column;
        }
    }

    .addButton {
        text-align: center;
        display: inline-block;
    }
    .portDisplay {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
    }
}

.nodeFrame {
    width: $frameSize;
    height: $frameSize;
    border: 3px double white;

    .heading {
        width: 100%;
        text-align: center;
    }

    .leftPanel {
        float: left;
        height: $innerFrameSize;
        width: $innerFrameSize - $sideFragmentSize;
    }
    .rightPanel {
        float: left;
        height: $innerFrameSize;
        width: $sideFragmentSize;
        border-left: 3px double white;
    }

    &.numpadNode {
        $buttonWidth: $innerFrameSize / 3;
        $buttonHeight: $innerFrameSize / 4;
        .numpadRow {
            width: 100%;
            height: $buttonHeight;

            .button {
                display: inline-block;
                width: $buttonWidth;
                height: 100%;

                $buttonPadding: 4px;
                $dButtonPadding: $buttonPadding * 2;
                padding: $buttonPadding;

                &.big {
                    width: $buttonWidth * 2;
                    a {
                        width: ($buttonWidth * 2) - $dButtonPadding;
                    }
                }
                a {
                    display: table-cell;
                    vertical-align: middle;
                    text-align: center;
                    @include unselectable();

                    border: 3px double grey;

                    width: $buttonWidth - $dButtonPadding;
                    height: $buttonHeight - $dButtonPadding;
                }
            }
        }
    }

    &.visualNode {
        .canvas {
            width: 100%;
            height: 100%;
            @include disableInterpolation();
        }
    }

    &.beeperNode {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    &.stackMemoryNode {
        .leftPanel {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .rightPanel {
            div:last-child {
                background-color: red;
            }
        }
    }

    &.basicExecNode {
        .leftPanel {
            // .textEditor
        }
        .rightPanel {
            .fragment {
                width: 100%;
                height: $sideFragmentSize;
                border-bottom: 3px double white;
                text-align: center;
                &:last-child {
                    border-bottom: 0;
                }
            }
        }
    }
}

.modalContainer {
    z-index: 10;

    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0.5, 0.5, 0.5, 0.5);

    display: flex;
    align-items: center;
    justify-content: center;

    .type {
        background-color: white;
        color: black;
        padding: 6px;
    }

    .nodeAddDialogType {
        max-width: 300px;
        a {
            display: block;
        }
    }

    .saveJsonType {
        textarea {
            width: 100%;
            resize: none;
        }
    }
    .loadJsonType {
        textArea {
            width: 100%;
            resize: none;
        }
    }

}

// I don't think I need to even write it, but this is shitty.
.markedTextEdit {
    @for $i from 0 through 100 {
        &.highlightLine-#{$i} .CodeMirror-code > :nth-child(#{$i + 1}) {
            background-color: red;
        }
    }
}

.textEditor {
    width: 100%;
    height: 100%;

    .inArea {
        resize: none;
        width: 100%;
        height: 100%;
        background-color: black;
    }
    .CodeMirror {
        width: 100%;
        height: 100%;
        background-color: black;
        color: white;

        div.CodeMirror-cursor {
            border-left: 1px solid white;
        }

        .pcLine {
            background-color: red;
        }
    }
}

.textEditorBreakpoint {
    width: 10px;
    background-color: black;
}
